{"version":3,"sources":["../../src/lib/EventCapture.js"],"names":["EventCapture","props","handleEnter","bind","handleLeave","handleWheel","handleMouseMove","handleMouseDown","handlePanEnd","handlePan","handleTouchStart","handleTouchMove","handlePinchZoom","handlePinchZoomEnd","handleClick","handleRightClick","handleDrag","handleDragEnd","shouldPan","canPan","setCursorClass","saveNode","mouseInside","mouseInteraction","state","panInProgress","node","focus","on","MOUSEENTER","MOUSELEAVE","componentDidMount","win","MOUSEMOVE","e","d3Event","onMouseEnter","dragInProgress","onMouseLeave","zoom","onZoom","yZoom","Math","abs","deltaY","deltaX","mouseXY","preventDefault","zoomDir","panStart","panStartXScale","chartsToPan","lastNewPos","panHappened","dx","dy","dxdy","onPan","xScale","chartConfig","currentCharts","setState","panOrigin","queuePanEnd","panEndTimeout","clearTimeout","setTimeout","onMouseMove","mouseMove","newPos","onClick","onDoubleClick","dragHappened","clicked","stopPropagation","onContextMenu","onPanEnd","getBoundingClientRect","MOUSEUP","onDrag","startPos","dragStartPosition","onDragComplete","getAllPanConditions","initialPanEnabled","pan","reduce","returnObj","a","draggable","panEnabled","somethingSelected","button","onMouseDown","onDragStart","TOUCHMOVE","TOUCHEND","touchXY","touches","length","touch1Pos","touch2Pos","pinchZoomStart","range","zoomEnabled","onPinchZoom","initialPinch","onPinchZoomEnd","cursorOverrideClass","height","width","id","disableInteraction","useCrossHairStyleCursor","className","interactionProps","onWheel","onTouchStart","onTouchMove","opacity","Component","propTypes","PropTypes","bool","isRequired","panSpeedMultiplier","number","array","func","xAccessor","children","defaultProps","noop"],"mappings":"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","file":"EventCapture.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { select, event as d3Event, mouse, touches } from \"d3-selection\";\n\nimport {\n    isDefined, mousePosition, touchPosition, getTouchProps,\n    d3Window,\n    MOUSEMOVE, MOUSEUP,\n    MOUSEENTER, MOUSELEAVE,\n    TOUCHMOVE, TOUCHEND,\n    noop\n} from \"./utils\";\nimport { getCurrentCharts } from \"./utils/ChartDataUtil\";\n\n// import { clearTimeout, setTimeout } from \"timers\";\n\nclass EventCapture extends Component {\n    constructor(props) {\n        super(props);\n        this.handleEnter = this.handleEnter.bind(this);\n        this.handleLeave = this.handleLeave.bind(this);\n        this.handleWheel = this.handleWheel.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handlePanEnd = this.handlePanEnd.bind(this);\n        this.handlePan = this.handlePan.bind(this);\n        this.handleTouchStart = this.handleTouchStart.bind(this);\n        this.handleTouchMove = this.handleTouchMove.bind(this);\n        this.handlePinchZoom = this.handlePinchZoom.bind(this);\n        this.handlePinchZoomEnd = this.handlePinchZoomEnd.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        this.handleRightClick = this.handleRightClick.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n        this.handleDragEnd = this.handleDragEnd.bind(this);\n\n        this.shouldPan = this.shouldPan.bind(this);\n        this.canPan = this.canPan.bind(this);\n\n        this.setCursorClass = this.setCursorClass.bind(this);\n        this.saveNode = this.saveNode.bind(this);\n\n        this.mouseInside = false;\n\n        this.mouseInteraction = true;\n        this.state = {\n            panInProgress: false\n        };\n    }\n\n    saveNode(node) {\n        this.node = node;\n    }\n\n    componentWillMount() {\n        this.focus = this.props.focus;\n    }\n\n    componentDidMount() {\n        if (this.node) {\n            select(this.node)\n                .on(MOUSEENTER, this.handleEnter)\n                .on(MOUSELEAVE, this.handleLeave);\n        }\n    }\n\n    componentDidUpdate() {\n        this.componentDidMount();\n    }\n\n    componentWillUnmount() {\n        if (this.node) {\n            select(this.node)\n                .on(MOUSEENTER, null)\n                .on(MOUSELEAVE, null);\n            const win = d3Window(this.node);\n            select(win)\n                .on(MOUSEMOVE, null);\n        }\n    }\n\n    handleEnter() {\n        const e = d3Event;\n\n        const { onMouseEnter } = this.props;\n        this.mouseInside = true;\n        if (!this.state.panInProgress\n            && !this.state.dragInProgress) {\n            const win = d3Window(this.node);\n            select(win)\n                .on(MOUSEMOVE, this.handleMouseMove);\n        }\n        onMouseEnter(e);\n    }\n\n    handleLeave(e) {\n        const { onMouseLeave } = this.props;\n        this.mouseInside = false;\n        if (!this.state.panInProgress\n            && !this.state.dragInProgress) {\n            const win = d3Window(this.node);\n            select(win)\n                .on(MOUSEMOVE, null);\n        }\n        onMouseLeave(e);\n    }\n\n    handleWheel(e) {\n        const { zoom, onZoom } = this.props;\n        const { panInProgress } = this.state;\n\n        const yZoom = Math.abs(e.deltaY) > Math.abs(e.deltaX) && Math.abs(e.deltaY) > 0;\n        // const xPan = Math.abs(e.deltaY) < Math.abs(e.deltaX) && Math.abs(e.deltaX) > 0;\n        const mouseXY = mousePosition(e);\n        e.preventDefault();\n\n        if (zoom && this.focus && yZoom && !panInProgress) {\n            const zoomDir = e.deltaY > 0 ? 1 : -1;\n\n            onZoom(zoomDir, mouseXY, e);\n        } else if (this.focus) {\n            if (this.shouldPan()) {\n                // console.log(\"Do pan now...\")\n                // pan already in progress\n                const {\n                    panStartXScale,\n                    chartsToPan\n                } = this.state.panStart;\n                this.lastNewPos = mouseXY;\n                this.panHappened = true;\n\n                this.dx += e.deltaX;\n                this.dy += e.deltaY;\n                const dxdy = { dx: this.dx, dy: this.dy };\n\n                this.props.onPan(mouseXY, panStartXScale, dxdy, chartsToPan, e);\n            } else {\n                // console.log(\"Pan start...\")\n                // pan start\n\n                const { xScale, chartConfig } = this.props;\n                const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n                this.dx = 0;\n                this.dy = 0;\n                this.setState({\n                    panInProgress: true,\n                    panStart: {\n                        panStartXScale: xScale,\n                        panOrigin: mouseXY,\n                        chartsToPan: currentCharts\n                    }\n                });\n            }\n            this.queuePanEnd();\n        }\n    }\n\n    queuePanEnd() {\n        if (isDefined(this.panEndTimeout)) {\n            clearTimeout(this.panEndTimeout);\n        }\n        this.panEndTimeout = setTimeout(() => {\n            this.handlePanEnd();\n        }, 100);\n    }\n\n    handleMouseMove() {\n        const e = d3Event;\n\n        const { onMouseMove, mouseMove } = this.props;\n\n        if (this.mouseInteraction\n            && mouseMove\n            && !this.state.panInProgress) {\n\n            const newPos = mouse(this.node);\n\n            onMouseMove(newPos, \"mouse\", e);\n        }\n    }\n\n    handleClick(e) {\n        const mouseXY = mousePosition(e);\n        const { onClick, onDoubleClick } = this.props;\n\n        if (!this.panHappened && !this.dragHappened) {\n            if (this.clicked) {\n                onDoubleClick(mouseXY, e);\n                this.clicked = false;\n            } else {\n                onClick(mouseXY, e);\n                this.clicked = true;\n                setTimeout(() => {\n                    if (this.clicked) {\n                        this.clicked = false;\n                    }\n                }, 400);\n            }\n        }\n    }\n\n    handleRightClick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        const { onContextMenu, onPanEnd } = this.props;\n\n        const mouseXY = mousePosition(e, this.node.getBoundingClientRect());\n\n        if (isDefined(this.state.panStart)) {\n            const { panStartXScale, panOrigin, chartsToPan } = this.state.panStart;\n            if (this.panHappened) {\n                onPanEnd(mouseXY, panStartXScale, panOrigin, chartsToPan, e);\n            }\n            const win = d3Window(this.node);\n            select(win)\n                .on(MOUSEMOVE, null)\n                .on(MOUSEUP, null);\n\n            this.setState({\n                panInProgress: false,\n                panStart: null\n            });\n        }\n\n        onContextMenu(mouseXY, e);\n    }\n\n    handleDrag() {\n        const e = d3Event;\n        if (this.props.onDrag) {\n            this.dragHappened = true;\n            const mouseXY = mouse(this.node);\n            this.props.onDrag({\n                startPos: this.state.dragStartPosition,\n                mouseXY\n            }, e);\n        }\n    }\n\n    cancelDrag() {\n        const win = d3Window(this.node);\n        select(win)\n            .on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n            .on(MOUSEUP, null);\n\n        this.setState({\n            dragInProgress: false\n        });\n        this.mouseInteraction = true;\n    }\n\n    handleDragEnd() {\n        const e = d3Event;\n        const mouseXY = mouse(this.node);\n\n        const win = d3Window(this.node);\n        select(win)\n            .on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n            .on(MOUSEUP, null);\n\n        if (this.dragHappened) {\n            this.props.onDragComplete({\n                mouseXY\n            }, e);\n        }\n\n        this.setState({\n            dragInProgress: false\n        });\n        this.mouseInteraction = true;\n    }\n\n    canPan() {\n        const { getAllPanConditions } = this.props;\n        const { pan: initialPanEnabled } = this.props;\n\n        const {\n            panEnabled,\n            draggable: somethingSelected\n        } = getAllPanConditions()\n            .reduce((returnObj, a) => {\n                return {\n                    draggable: returnObj.draggable || a.draggable,\n                    panEnabled: returnObj.panEnabled && a.panEnabled\n                };\n            }, {\n                draggable: false,\n                panEnabled: initialPanEnabled\n            });\n\n        return {\n            panEnabled,\n            somethingSelected\n        };\n    }\n\n    handleMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        const { xScale, chartConfig, onMouseDown } = this.props;\n\n        this.panHappened = false;\n        this.dragHappened = false;\n        this.focus = true;\n\n        if (!this.state.panInProgress\n            && this.mouseInteraction\n        ) {\n\n            const mouseXY = mousePosition(e);\n            const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n            const {\n                panEnabled, somethingSelected\n            } = this.canPan();\n            const pan = panEnabled && !somethingSelected;\n\n            if (pan) {\n                this.setState({\n                    panInProgress: pan,\n                    panStart: {\n                        panStartXScale: xScale,\n                        panOrigin: mouseXY,\n                        chartsToPan: currentCharts\n                    }\n                });\n\n                const win = d3Window(this.node);\n                select(win)\n                    .on(MOUSEMOVE, this.handlePan)\n                    .on(MOUSEUP, this.handlePanEnd);\n\n            } else if (somethingSelected) {\n                this.setState({\n                    panInProgress: false,\n                    dragInProgress: true,\n                    panStart: null,\n                    dragStartPosition: mouseXY\n                });\n                this.props.onDragStart({ startPos: mouseXY }, e);\n                // this.mouseInteraction = false;\n\n                const win = d3Window(this.node);\n                select(win)\n                    .on(MOUSEMOVE, this.handleDrag)\n                    .on(MOUSEUP, this.handleDragEnd);\n            }\n\n            onMouseDown(mouseXY, currentCharts, e);\n        }\n        e.preventDefault();\n    }\n\n    shouldPan() {\n        const { pan: panEnabled, onPan } = this.props;\n        return panEnabled\n            && onPan\n            && isDefined(this.state.panStart);\n    }\n\n    handlePan() {\n        const e = d3Event;\n\n        if (this.shouldPan()) {\n            this.panHappened = true;\n\n            const { panStartXScale, panOrigin, chartsToPan } = this.state.panStart;\n\n            const mouseXY = this.mouseInteraction\n                ? mouse(this.node)\n                : touches(this.node)[0];\n\n            this.lastNewPos = mouseXY;\n            const dx = mouseXY[0] - panOrigin[0];\n            const dy = mouseXY[1] - panOrigin[1];\n\n            this.dx = dx;\n            this.dy = dy;\n\n            this.props.onPan(\n                mouseXY, panStartXScale, { dx, dy }, chartsToPan, e\n            );\n        }\n    }\n\n    handlePanEnd() {\n        const e = d3Event;\n        const { pan: panEnabled, onPanEnd } = this.props;\n\n        if (isDefined(this.state.panStart)) {\n            const { panStartXScale, chartsToPan } = this.state.panStart;\n\n            const win = d3Window(this.node);\n            select(win)\n                .on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n                .on(MOUSEUP, null)\n                .on(TOUCHMOVE, null)\n                .on(TOUCHEND, null);\n\n            if (this.panHappened\n                // && !this.contextMenuClicked\n                && panEnabled\n                && onPanEnd) {\n                const { dx, dy } = this;\n\n                // console.log(dx, dy)\n                delete this.dx;\n                delete this.dy;\n                onPanEnd(this.lastNewPos, panStartXScale, { dx, dy }, chartsToPan, e);\n            }\n\n            this.setState({\n                panInProgress: false,\n                panStart: null\n            });\n        }\n    }\n\n    handleTouchMove(e) {\n        const { onMouseMove } = this.props;\n        const touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n        onMouseMove(touchXY, \"touch\", e);\n    }\n\n    handleTouchStart(e) {\n        this.mouseInteraction = false;\n\n        const { pan: panEnabled, chartConfig, onMouseMove } = this.props;\n        const { xScale, onPanEnd } = this.props;\n\n        if (e.touches.length === 1) {\n\n            this.panHappened = false;\n            const touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n            onMouseMove(touchXY, \"touch\", e);\n\n            if (panEnabled) {\n                const currentCharts = getCurrentCharts(chartConfig, touchXY);\n\n                this.setState({\n                    panInProgress: true,\n                    panStart: {\n                        panStartXScale: xScale,\n                        panOrigin: touchXY,\n                        chartsToPan: currentCharts\n                    }\n                });\n\n                const win = d3Window(this.node);\n                select(win)\n                    .on(TOUCHMOVE, this.handlePan, false)\n                    .on(TOUCHEND, this.handlePanEnd, false);\n\n            }\n        } else if (e.touches.length === 2) {\n            // pinch zoom begin\n            // do nothing pinch zoom is handled in handleTouchMove\n            const { panInProgress, panStart } = this.state;\n\n            if (panInProgress && panEnabled && onPanEnd) {\n                const { panStartXScale, panOrigin, chartsToPan } = panStart;\n\n                const win = d3Window(this.node);\n                select(win)\n                    .on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n                    .on(MOUSEUP, null)\n                    .on(TOUCHMOVE, this.handlePinchZoom, false)\n                    .on(TOUCHEND, this.handlePinchZoomEnd, false);\n\n                const touch1Pos = touchPosition(getTouchProps(e.touches[0]), e);\n                const touch2Pos = touchPosition(getTouchProps(e.touches[1]), e);\n\n                if (this.panHappened\n                    // && !this.contextMenuClicked\n                    && panEnabled\n                    && onPanEnd) {\n\n                    onPanEnd(this.lastNewPos, panStartXScale, panOrigin, chartsToPan, e);\n                }\n\n                this.setState({\n                    panInProgress: false,\n                    pinchZoomStart: {\n                        xScale,\n                        touch1Pos,\n                        touch2Pos,\n                        range: xScale.range(),\n                        chartsToPan\n                    }\n                });\n            }\n        }\n    }\n\n    handlePinchZoom() {\n        const e = d3Event;\n        const [touch1Pos, touch2Pos] = touches(this.node);\n        const { xScale, zoom: zoomEnabled, onPinchZoom } = this.props;\n\n        // eslint-disable-next-line no-unused-vars\n        const { chartsToPan, ...initialPinch } = this.state.pinchZoomStart;\n\n        if (zoomEnabled && onPinchZoom) {\n            onPinchZoom(initialPinch, {\n                touch1Pos,\n                touch2Pos,\n                xScale\n            }, e);\n        }\n    }\n\n    handlePinchZoomEnd() {\n        const e = d3Event;\n\n        const win = d3Window(this.node);\n        select(win)\n            .on(TOUCHMOVE, null)\n            .on(TOUCHEND, null);\n\n        const { zoom: zoomEnabled, onPinchZoomEnd } = this.props;\n\n        // eslint-disable-next-line no-unused-vars\n        const { chartsToPan, ...initialPinch } = this.state.pinchZoomStart;\n\n        if (zoomEnabled && onPinchZoomEnd) {\n            onPinchZoomEnd(initialPinch, e);\n        }\n\n        this.setState({\n            pinchZoomStart: null\n        });\n    }\n\n    setCursorClass(cursorOverrideClass) {\n        if (cursorOverrideClass !== this.state.cursorOverrideClass) {\n            this.setState({\n                cursorOverrideClass\n            });\n        }\n    }\n\n    render() {\n        const { height, width, id, disableInteraction, useCrossHairStyleCursor } = this.props;\n        const className = this.state.cursorOverrideClass != null\n            ? this.state.cursorOverrideClass\n            : !useCrossHairStyleCursor ? \"\" : this.state.panInProgress\n                ? \"react-stockcharts-cursor react-stockcharts-grabbing-cursor\"\n                : \"react-stockcharts-cursor react-stockcharts-crosshair-cursor\";\n\n        const interactionProps = disableInteraction || {\n            onWheel: this.handleWheel,\n            onMouseDown: this.handleMouseDown,\n            onClick: this.handleClick,\n            onContextMenu: this.handleRightClick,\n            onTouchStart: this.handleTouchStart,\n            onTouchMove: this.handleTouchMove\n        };\n\n        return (\n            <rect ref={this.saveNode}\n                  className={className}\n                  width={width}\n                  height={height}\n                  id={id}\n                  style={{ opacity: 0 }}\n                  {...interactionProps}\n            />\n        );\n    }\n}\n\n// \t\t\t\tonMouseEnter={this.handleEnter}\n//\t\t\t\tonMouseLeave={this.handleLeave}\n\n\nEventCapture.propTypes = {\n    mouseMove: PropTypes.bool.isRequired,\n    zoom: PropTypes.bool.isRequired,\n    pan: PropTypes.bool.isRequired,\n    panSpeedMultiplier: PropTypes.number.isRequired,\n    focus: PropTypes.bool.isRequired,\n    useCrossHairStyleCursor: PropTypes.bool.isRequired,\n\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    chartConfig: PropTypes.array,\n    xScale: PropTypes.func.isRequired,\n    xAccessor: PropTypes.func.isRequired,\n    disableInteraction: PropTypes.bool.isRequired,\n\n    getAllPanConditions: PropTypes.func.isRequired,\n\n    onMouseMove: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onZoom: PropTypes.func,\n    onPinchZoom: PropTypes.func,\n    onPinchZoomEnd: PropTypes.func.isRequired,\n    onPan: PropTypes.func,\n    onPanEnd: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragComplete: PropTypes.func,\n\n    onClick: PropTypes.func,\n    onDoubleClick: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    children: PropTypes.node\n};\n\nEventCapture.defaultProps = {\n    mouseMove: false,\n    zoom: false,\n    pan: false,\n    panSpeedMultiplier: 1,\n    focus: false,\n    onDragComplete: noop,\n    disableInteraction: false\n};\n\nexport default EventCapture;\n"]}